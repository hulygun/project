syntax = "proto3";
import "google/protobuf/empty.proto";

message BookID {
    int32 id = 1;
    string book_type = 2;
}

message BookIDs {
    repeated int32 ids = 1;
    string book_type = 2;
}

message Notify {
    string recipient = 1;
    string message = 2;
    int32 channel = 3;
}

message CheckNotify {
    int32 id = 1;
}

message Data {
    int32 id = 1;
    string name = 2;
}

message FilteredData {
    repeated Data results = 1;
}

message Datatype {
    string name = 1;
    float version = 2;
    string author = 3;
    string description = 4;
}

message FilteredDatatype {
    repeated Datatype results = 1;
}

message NotificateStatus {
    int32 id = 1;
    int32 code = 2;
    string status = 3;
}

message NoticeStatus {
    int32 code = 2;
    string status = 3;
}

message AvailableNotificateStatuses {
    repeated NoticeStatus results = 1;
}

message NotificateChannel {
    int32 id = 1;
    string name = 2;
    string desc = 3;
}

message AvailableNotificateChannels {
    repeated NotificateChannel results = 1;
}


service Book {
    rpc getData(BookID) returns (Data);
    rpc filterData(BookIDs) returns (FilteredData);
    rpc filterDatatype(google.protobuf.Empty) returns (FilteredDatatype);
}

service Notificate {
    rpc statuses(google.protobuf.Empty) returns (AvailableNotificateStatuses);
    rpc channels(google.protobuf.Empty) returns (AvailableNotificateChannels);
    rpc check(CheckNotify) returns (NoticeStatus);
    rpc notice(Notify) returns (NotificateStatus);
}

service Auth {

}